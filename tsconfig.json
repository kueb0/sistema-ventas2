{
  "compilerOptions": {
    /* Projects */
    // "incremental": true,                              /* Enable incremental compilation to speed up subsequent builds. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to the incremental build info file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Disable multi-project reference checking. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "ES6",                                  /* Set the target ECMAScript version for the emitted JavaScript. */
    // "lib": [],                                        /* Specify a set of library declaration files to include. */
    // "jsx": "preserve",                                /* Specify what JSX code is generated. */
    // "experimentalDecorators": true,                   /* Enable experimental support for decorators. */
    // "emitDecoratorMetadata": true,                    /* Emit metadata for decorated declarations. */
    // "jsxFactory": "",                                 /* Specify the JSX factory function used for React. */
    // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for React. */
    // "jsxImportSource": "",                            /* Specify module specifier for importing JSX factory functions. */
    // "reactNamespace": "",                             /* Specify the object invoked for 'createElement' in React. */
    // "noLib": true,                                    /* Disable including any library files. */
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                        /* Control how module-format JS files are detected. */

    /* Modules */
    "module": "commonjs",                                /* Specify the module code generation. */
    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
    // "moduleResolution": "node10",                     /* Specify module resolution strategy. */
    // "baseUrl": "./",                                  /* Specify the base directory for resolving non-relative module names. */
    // "paths": {},                                      /* Specify paths to remap imports. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one. */
    "typeRoots": [
      "./node_modules/@types"
    ],                                               /* Specify directories for type declarations. */
    // "types": [],                                      /* Specify type package names to be included without being referenced in source files. */
    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    // "moduleSuffixes": [],                             /* List of file name suffixes to search for modules. */
    // "allowImportingTsExtensions": true,               /* Allow TypeScript file extensions in imports. */
    // "resolvePackageJsonExports": true,                /* Use the package.json 'exports' field when resolving package imports. */
    // "resolvePackageJsonImports": true,                /* Use the package.json 'imports' field when resolving imports. */
    // "customConditions": [],                           /* Additional conditions for resolving imports. */
    // "resolveJsonModule": true,                        /* Enable importing .json files. */
    // "allowArbitraryExtensions": true,                 /* Allow importing files with any extension if a declaration file is present. */
    // "noResolve": true,                                /* Disallow expanding files in a project. */

    /* JavaScript Support */
    // "allowJs": true,                                  /* Allow JavaScript files in your program. */
    // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
    // "maxNodeModuleJsDepth": 1,                        /* Max depth for checking JavaScript files from node_modules. */

    /* Emit */
    // "declaration": true,                              /* Generate .d.ts files from TypeScript files. */
    // "declarationMap": true,                           /* Create sourcemaps for .d.ts files. */
    // "emitDeclarationOnly": true,                      /* Only output .d.ts files. */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript. */
    // "inlineSourceMap": true,                          /* Include source maps inside emitted JavaScript. */
    // "outFile": "./",                                  /* Bundle all outputs into one JavaScript file. */
    "outDir": "./build",                                   /* Specify output directory for all emitted files. */
    // "removeComments": true,                           /* Disable emitting comments. */
    // "noEmit": true,                                   /* Disable emitting files from a compilation. */
    // "importHelpers": true,                            /* Import helper functions from tslib. */
    // "downlevelIteration": true,                       /* Emit more compliant JavaScript for iteration. */
    // "sourceRoot": "",                                 /* Specify the root path for debuggers. */
    // "mapRoot": "",                                    /* Specify location for map files. */
    // "inlineSources": true,                            /* Include source code in sourcemaps. */
    // "emitBOM": true,                                  /* Emit UTF-8 Byte Order Mark (BOM). */
    // "newLine": "crlf",                                /* Set newline character for emitted files. */
    // "stripInternal": true,                            /* Disable emitting declarations with '@internal'. */
    // "noEmitHelpers": true,                            /* Disable generating custom helper functions. */
    // "noEmitOnError": true,                            /* Disable emitting files on type checking errors. */
    // "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations. */
    // "declarationDir": "./",                           /* Specify output directory for declaration files. */

    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled. */
    // "verbatimModuleSyntax": true,                     /* Preserve module syntax in output. */
    // "isolatedDeclarations": true,                     /* Require sufficient annotation on exports. */
    // "allowSyntheticDefaultImports": true,             /* Allow imports for modules without a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease importing CommonJS modules. */
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. */
    "forceConsistentCasingInFileNames": true,            /* Ensure consistent casing in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                            /* Enable error reporting for implicit 'any' types. */
    // "strictNullChecks": true,                         /* Enable null and undefined checks. */
    // "strictFunctionTypes": true,                      /* Check subtype compatibility for functions. */
    // "strictBindCallApply": true,                      /* Check arguments for 'bind', 'call', and 'apply' methods. */
    // "strictPropertyInitialization": true,             /* Check class property initialization. */
    // "noImplicitThis": true,                           /* Enable error reporting for 'this' with type 'any'. */
    // "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown'. */
    // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    // "noUnusedLocals": true,                           /* Enable error reporting for unused local variables. */
    // "noUnusedParameters": true,                       /* Raise error for unused function parameters. */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written. */
    // "noImplicitReturns": true,                        /* Enable error reporting for missing return statements. */
    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough in switch statements. */
    // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to types accessed using an index. */
    // "noImplicitOverride": true,                       /* Ensure overrides are marked with 'override'. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforce indexed access for keys declared using an index type. */
    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking default lib.d.ts files. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": [
    "src/**/*"                                           /* Include all TypeScript files in the src directory. */
  ],
  "exclude": [
    "node_modules",                                    /* Exclude node_modules directory. */
    "**/*.spec.ts"                                     /* Optionally exclude test files. */
  ]
}